library(zipfR)
install.packages("zipfR")
#First Part is to clean up the text
book1 <- readLines("Sorcerer's Stone.txt", encoding="UTF-8")
setwd("Users/chloequinto/Documents/DA-projects/Zipf_SorcerStone")
sentiments <- data_frame()
library(tidytext)
library(tidyverse)
library(dplyr)
library(readr)
library(glue)
library(stringr)
library(ggplot2)
sentiments <- data_frame()
### Collect all sentiments ###
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
library(tidytext)
library(tidyverse)
library(dplyr)
library(readr)
library(glue)
library(stringr)
library(ggplot2)
library(ggpmisc)
library(ggplot2)
library(ggpmisc)
### Get Files ###
files <- read.csv("Forum Post Code/FPC_comp.csv", header=FALSE)
ggplot(files, aes(x = files$V1, y=files$V3, color=files$V3)) +
geom_point() +
scale_color_continuous(name="") +
geom_vline(xintercept=32)+
geom_vline(xintercept=90)+
#annotate("rect", xmin = 80, xmax = 113, ymin = 0, ymax = 0.48,alpha = .3) +
geom_text(aes(x=32, label="\nIncarna Crises", y=0.3), color="blue", angle=90, size=3) +
geom_text(aes(x=90, label="\nNDA Leaks", y=0.3), color="blue", angle=90, size=3)+
annotate("rect", xmin = 46, xmax = 53, ymin= 0, ymax = 0.4, alpha =0.3)+
geom_text(aes(x = 46, label="\nReplacement Period", y=0.3), color = "#009E73", angle=90, size=3)+
ggtitle("Topic: 0") + labs(y = "Probability of Topic", x = "Date")+
stat_smooth(method="lm", se=TRUE, fill=NA,formula=formula,colour="red") +
stat_poly_eq(parse=T, aes(label = ..rr.label..), formula=formula)
data <- read.csv("csm subforums all posts cleaned.csv")
setwd("Users/home/documents/eve_data")
wd()
wd
getwd()
setwd("Users/chloequinto/home/documents/EVE_data")
setwd("/Users/chloequinto/Documents/code-base-metrics/input results")
d.1.3 <- read.csv("django_1.3.csv", header = FALSE )
d.1.4 <- read.csv("django_1.4.csv", header = FALSE)
d.1.5 <- read.csv("django_1.5.csv", header = FALSE)
d.1.6 <- read.csv("django_1.6.csv", header = FALSE)
d.1.7 <- read.csv("django_1.7.csv", header = FALSE)
d.1.8 <- read.csv("django_1.8.csv", header = FALSE)
d.1.9 <- read.csv("django_1.9.csv", header = FALSE)
d.1.10 <- read.csv("django_1.10.csv", header = FALSE)
r.3.1 <- read.csv("rails_3.1.csv", header = FALSE)
r.3.2 <- read.csv("rails_3.2.csv", header = FALSE)
r.4.0 <- read.csv("rails_4.0.csv", header = FALSE)
r.4.1 <- read.csv("rails_4.1.csv", header = FALSE)
r.4.2 <- read.csv("rails_4.2.csv", header = FALSE)
r.5.0 <- read.csv("rails_5.0.csv", header = FALSE)
# Scrip to execute T tests
library(readxl)
############ CNN CALCULATIONS ##############
# 2011 Calculations
d.2011_CNN <- d.1.3$V2
r.2011_CNN <- r.3.1$V2
mean(d.1.3$V2)
mean(r.3.1$V2)
