library(zipfR)
install.packages("zipfR")
#First Part is to clean up the text
book1 <- readLines("Sorcerer's Stone.txt", encoding="UTF-8")
setwd("Users/chloequinto/Documents/DA-projects/Zipf_SorcerStone")
sentiments <- data_frame()
library(tidytext)
library(tidyverse)
library(dplyr)
library(readr)
library(glue)
library(stringr)
library(ggplot2)
sentiments <- data_frame()
### Collect all sentiments ###
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
setwd("/Users/chloequinto/Documents/code-base-metrics/input results")
library(readxl)
d.1.6 <- read.csv(d.1.6)
d.1.6 <- read.csv(d_1.6)
d.1.6 <- read.csv("d_1.6")
d.1.6 <- read.csv("d_1.6.csv")
head(d.1.6)
View(d.1.6)
d.1.6 <- read.csv("d_1.6.csv", header= FALSE)
head(d.1.6)
View(d.1.6)
View(d.1.6)
unique(V7)
unique(d.1.6$V7)
head(unique(d.1.6$V7))
#while(V7 is the same file){
#  add up all v5
#  }
myContain <- list()
values <- unique(d.1.6$V7)
for(i in values){
myContain[[d.1.6$V7]] <- TRUE
}
for(i in values){
myContain <- TRUE
}
for(i in values){
myContain[i] <- TRUE
}
for(i in values){
myContain[i] <- TRUE
}
for(i in values){
myContain[TRUE] <- i
}
View(myContain)
myContain[TRUE] <- 1
myContain[TRUE] <- 1
for(i in values){
myContain[i] <- 1
}
setwd("/Users/chloequinto/Documents/code-base-metrics/input results")
d.1.6 <- read.csv("d_1.6.csv", header= FALSE)
myContain <- list()
values <- unique(d.1.6$V7)
for(i in values){
myContain[i] <- 1
}
head(unique(d.1.6$V7))
View(myContain)
View(myContain)
for (i in d.1.6$V7){
if (d.1.6$V7[i] == d.1.6$V7[i+1]){
myContain[i] <- num
num = num + 1
}
else {
num = 0
myContain[i] <- num
}
}
sequence(rle(as.character(d.1.6$V7))$lengths)
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
count = 0
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
for (i in run){
if (i == 1){
count = count + 1
}
}
for (i in run){
if ( (i+1) == 1){
count = count +1
}
}
count = 0
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
for (i in run){
if ( (i+1) == 1){
count = count +1
}
}
count = 0
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
for (i in run){
if ( i == 1){
count = count +1
}
}
sequence(rle(as.character(d.1.6$V7))$lengths)
count = 0
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
for (i in run){
while(i != 1){
myContain[d.1.6$V7] <- i
}
}
source('~/Documents/code-base-metrics/t_tests.R', echo=TRUE)
head(myContain)
sequence(rle(as.character(d.1.6$V7))$lengths)
values <- unique(d.1.6$V7)
for(i in values){
myContain[i] <- 1
}
View(myContain)
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
values <- unique(d.1.6$V7)
myContain <- list()
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
values <- unique(d.1.6$V7)
for(i in values){
for (b in run){
while(b != 1){
myContain[i] <- b
}
}
}
count = 0
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
for (i in run){
while(i != 1){
myContain[d.1.6$V7] <- i
}
}
run <- sequence(rle(as.character(d.1.6$V7))$lengths)
head(myContain)
View(run)
write.csv(run, "d.1.6.csv")
write.csv(run, "d.1.6_results.csv")
write.table(run, "d.1.6_results.txt")
data.frame(d.1.6$V7 = run)
View(run)
table(d.1.6$V7, run))
table(d.1.6$V7, run)
really <- table(d.1.6$V7, run)
head(really)
View(run)
really <- table(d.1.6$V7)
head(really)
write.table(d.1.6$V7, "d.1.6_res.txt" )
write.table(unique(d.1.6$V7), "d.1.6_res.txt" )
