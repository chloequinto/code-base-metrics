library(zipfR)
install.packages("zipfR")
#First Part is to clean up the text
book1 <- readLines("Sorcerer's Stone.txt", encoding="UTF-8")
setwd("Users/chloequinto/Documents/DA-projects/Zipf_SorcerStone")
sentiments <- data_frame()
library(tidytext)
library(tidyverse)
library(dplyr)
library(readr)
library(glue)
library(stringr)
library(ggplot2)
sentiments <- data_frame()
### Collect all sentiments ###
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
for (i in files) {
tryCatch ({
sentiments <- rbind(sentiments, GetSentiment(i))
},
error=function(e){
print(paste("Error: ", i))
})
}
files <- list.files("FPC_txt/")
AVG_NLOC <- t.test(8.525, 8.3833, var.equal = FALSE)
### AVERAGE NLOC ###
library(xlsx)
install.packages("xlsx")
NLOC_DATA_D <- read_excel("t_test.xlsx", sheet= "Django")
library(readxl)
NLOC_DATA_D <- read_excel("t_test.xlsx", sheet= "Django")
setwd("Users/chloequinto/Documents/code-base-metrics")
source('~/Documents/code-base-metrics/t_tests.R', echo=TRUE)
getwd()
setwd("/Users/chloequinto/Documents/code-base-metrics")
library(readxl)
NLOC_DATA_D <- read_excel("t_test.xlsx", sheet= "Django")
source('~/Documents/code-base-metrics/t_tests.R', echo=TRUE)
t
NLOC_DATA_R <- read_excel("t_test.xlsx", sheet = "Ruby")
head(NLOC_DATA_D)
NLOC_DATA_D$NLOC
AVG_NLOC <- t.test(NLOC_DATA_D$NLOC, NLOC_DATA_R$NLOC, var.equal = FALSE)
View(AVG_NLOC)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.csv", col.names = TRUE, row.names = TRUE)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.csv", col.names = TRUE, row.names = TRUE, sheet = "NLOC")
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.csv", col.names = TRUE, row.names = TRUE, sheets = "NLOC")
write.xlsx(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.xlsx", col.names = TRUE, row.names = TRUE, sheets = "NLOC")
library(xlsx)
install.packages('xlsx')
library(xlsx)
sudo R CMD javareconf
install.packages("rJava", type = "source")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("rJava", type = "source")
library(xlsx)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.xlsx", col.names = TRUE, row.names = TRUE, sheets = "NLOC")
DATA_D <- read_excel("t_test.xlsx", sheet = "Django")
DATA_R <- read
eadxl)
library(xlsx)
setwd("/Users/c
library(readxl)
library(xlsx)
setwd("/Users/chloequinto/Documents/code-base-metrics")
()
)
library(readxl)
library(xlsx)
setwd("/Users/chloequinto/Documents/code-base-metrics")
library(readxl)
setwd("/Users/chloequinto/Documents/code-base-metrics")
DATA_D <- read_excel("t_test.xlsx", sheet = "Django")
DATA_R <- read_excel("t_test.xlsx", sheet = "Ruby")
AVG_NLOC <- t.test(DATA_D$NLOC, DATA_R$NLOC, var.equal = FALSE)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.xlsx", col.names = TRUE, row.names = TRUE, sheets = "NLOC")
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results.xlsx", col.names = TRUE, row.names = TRUE)
AVG_CNN <- t.test(DATA_D$CNN, DATA_R$CNN, var.equal = FALSE)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results_NLOC.xlsx", col.names = TRUE, row.names = TRUE)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results_NLOC.xlsx", col.names = TRUE, row.names = TRUE)
AVG_CNN <- t.test(DATA_D$CNN, DATA_R$CNN, var.equal = FALSE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results.xlsx", col.names = TRUE, row.names = TRUE)
AVG_FN <- t.test(DATA_D$Fun, DATA_R$Fun, var.equal = FALSE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results_FN.xlsx", col.names = TRUE, row.names = TRUE)
AVG_WRN <- t.test(DATA_D$Wrn, DATA_R$Wrn, var.equal = FALSE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results_WRN.xlsx", col.names = TRUE, row.names = TRUE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results_WRN.csv", col.names = TRUE, row.names = TRUE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results_FN.csv", col.names = TRUE, row.names = TRUE)
write.table(data.frame(unlist(AVG_WRN)), append = TRUE, file = "results_WRN.csv", col.names = TRUE, row.names = TRUE)
AVG_NLOC <- t.test(DATA_D$NLOC, DATA_R$NLOC, var.equal = FALSE)
write.table(data.frame(unlist(AVG_NLOC)), append = TRUE, file = "results_NLOC.csv", col.names = TRUE, row.names = TRUE)
AVG_CNN <- t.test(DATA_D$CNN, DATA_R$CNN, var.equal = FALSE)
write.table(data.frame(unlist(AVG_CNN)), append = TRUE, file = "results_CNN.csv", col.names = TRUE, row.names = TRUE)
AVG_FN <- t.test(DATA_D$Fun, DATA_R$Fun, var.equal = FALSE)
write.table(data.frame(unlist(AVG_FN)), append = TRUE, file = "results_FN.csv", col.names = TRUE, row.names = TRUE)
AVG_WRN <- t.test(DATA_D$Wrn, DATA_R$Wrn, var.equal = FALSE)
write.table(data.frame(unlist(AVG_WRN)), append = TRUE, file = "results_WRN.csv", col.names = TRUE, row.names = TRUE)
peak(AVG_NLOC)
head(AVG_CNN)
avg_wrn
head(avg_wrn)
head(AVG_WRN)
head(AVG_FN)
head(AVG_NLOC)
